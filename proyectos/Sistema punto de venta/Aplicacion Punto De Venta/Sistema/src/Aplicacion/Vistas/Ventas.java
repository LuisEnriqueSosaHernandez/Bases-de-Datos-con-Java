/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Aplicacion.Vistas;

import System.DataBase.Core.DataBase;
import System.Helper.IO;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LESH
 */
public class Ventas extends javax.swing.JFrame {

    DataBase db = new DataBase();
    static String rfcvendedor;
    static String contravendedor;
    String key = "";
    long numFolio = 0;
    DefaultTableModel modelo;
    DefaultTableModel modelo2;
    DefaultTableModel modelo3;
    DefaultTableModel modelo4;
    DefaultTableModel modelo5;
    BigDecimal iva = new BigDecimal("1.16");
    double vprecio = 0.00;
    double total = 0.00;
    BigDecimal precioIva = new BigDecimal("0");
    BigDecimal total2;
    boolean v = false;

    public Ventas(String rfc, String contra) {
        rfcvendedor = rfc;
        contravendedor = contra;

        initComponents();
        initComponents2();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents2() {
        String s = "";
        combosexocliente.removeAllItems();
        combosexocliente.addItem("H");
        combosexocliente.addItem("M");
        combovendedor.removeAllItems();
        combovendedor.addItem("H");
        combovendedor.addItem("M");
        mcajaclientes.removeAllItems();
        ArrayList clientes = db.excecuteQuery("SELECT idCte,nombre FROM cliente");
        for (int i = 0; i < clientes.size(); i++) {
            s = clientes.get(i).toString();

            mcajaclientes.addItem(s);
            s = "";

        }
        mcajavendedores.removeAllItems();
        ArrayList vendedores = db.excecuteQuery("SELECT rfc,nombre FROM vendedor");
        for (int i = 0; i < vendedores.size(); i++) {
            s = vendedores.get(i).toString();
            if (!s.equals("[root, ]")) {

                mcajavendedores.addItem(s);
                s = "";
            }
        }
        mcajaproductos.removeAllItems();
        ArrayList productos = db.excecuteQuery("SELECT idProducto,nombreP FROM producto");
        for (int i = 0; i < productos.size(); i++) {
            s = productos.get(i).toString();
            if (!s.equals("[root, ]")) {

                mcajaproductos.addItem(s);
                s = "";
            }
        }

        vproducto.removeAllItems();
        ArrayList vproductos = db.excecuteQuery("SELECT idProducto,nombreP FROM producto");
        vproducto.addItem("Seleccione un producto");
        for (int i = 0; i < vproductos.size(); i++) {
            s = vproductos.get(i).toString();
            if (!s.equals("[root, ]")) {

                vproducto.addItem(s);
                s = "";
            }
        }
        vcajaclientes.removeAllItems();
        ArrayList vclientes = db.excecuteQuery("SELECT idCte,nombre FROM cliente");
        for (int i = 0; i < vclientes.size(); i++) {
            s = vclientes.get(i).toString();

            vcajaclientes.addItem(s);
            s = "";

        }
        ventasmes.removeAllItems();
        ArrayList vmes = db.excecuteQuery("SELECT mes FROM cabventa GROUP BY mes");
        for (int i = 0; i < vmes.size(); i++) {
            s = vmes.get(i).toString();

            ventasmes.addItem(s);
            s = "";

        }
        ventasanio.removeAllItems();
        ArrayList vventasnio = db.excecuteQuery("SELECT anio FROM cabventa GROUP BY anio");
        for (int i = 0; i < vventasnio.size(); i++) {
            s = vventasnio.get(i).toString();

            ventasanio.addItem(s);
            s = "";

        }
        

        mcajasexocliente.removeAllItems();
        mcajasexocliente.addItem("H");
        mcajasexocliente.addItem("M");
        mcajasexovendedor.removeAllItems();
        mcajasexovendedor.addItem("H");
        mcajasexovendedor.addItem("M");
        mbtnseleccionafotocliente.setVisible(false);
        mactualizarcliente.setVisible(false);
        meliminarcliente.setVisible(false);
        mseleccionarfotovendedor.setVisible(false);
        mactualizarvendedor.setVisible(false);
        meliminarvendedor.setVisible(false);
        mseleccionafotoproducto.setVisible(false);
        mactualizaproducto.setVisible(false);
        meliminaproducto.setVisible(false);
        //IO.combobox_setMatriz(clientes, mcajaclientes);
        vlblproducto.setVisible(false);
        vproducto.setVisible(false);

        vagregarcarrito.setVisible(false);

        vfotoproducto.setVisible(false);
        vlblnombreproducto.setVisible(false);
        vlblsigno.setVisible(false);
        vlblprecio.setVisible(false);
        vDescripcionproducto.setVisible(false);
        vtabla.setVisible(false);
        vfinalizarventa.setVisible(false);
        veliminarproducto.setVisible(false);
        vtotal.setVisible(false);
        vtotalconiva.setVisible(false);
        vcancelarventa.setVisible(false);
        DetallesvENTA.setVisible(false);
        detallesdecompra.setVisible(false);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox3 = new javax.swing.JComboBox<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtrfcVendedor = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtnombreVendedor = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtapVendedor = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtamVendedor = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtedadVendedor = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtfechanacimientoVendedor = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtdireccionVendedor = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtnumerosocialVendedor = new javax.swing.JTextField();
        registrarVendedor = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        combovendedor = new javax.swing.JComboBox<>();
        btnfotovendedor = new javax.swing.JButton();
        lblfotovendedor = new javax.swing.JLabel();
        txtrutavendedor = new javax.swing.JTextField();
        lblfotoVendedor = new javax.swing.JLabel();
        txtcontraVendedor = new javax.swing.JPasswordField();
        label = new javax.swing.JLabel();
        vrepetircontra = new javax.swing.JPasswordField();
        jPanel3 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txtnombrecliente = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtappatcliente = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtapmatcliente = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtfechacliente = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtedadcliente = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtdireccioncliente = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtcorreocliente = new javax.swing.JTextField();
        RegistrarCliente = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        txtrutafotocliente = new javax.swing.JTextField();
        selecfotocliente = new javax.swing.JButton();
        lblfotocliente = new javax.swing.JLabel();
        combosexocliente = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        lblnombreproducto = new javax.swing.JLabel();
        txtrutafotoproducto = new javax.swing.JTextField();
        btnBuscarfoto = new javax.swing.JButton();
        lblfotoproducto = new javax.swing.JLabel();
        txtNombreproducto = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtexistenciaproducto = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        txtexistenciaminimaproducto = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtprecioproducto = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        btnregistrarproducto = new javax.swing.JButton();
        txtdescripcionproducto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        mcajaclientes = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        mrutaftocliente = new javax.swing.JTextField();
        mfotocliente = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        mnombrecliente = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        mapcliente = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        mamcliente = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        mfechancimientocliente = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        medadcliente = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        mdireccioncliente = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        mcajasexocliente = new javax.swing.JComboBox<>();
        lblcorreo234 = new javax.swing.JLabel();
        mcorreocliente = new javax.swing.JTextField();
        mactualizarcliente = new javax.swing.JButton();
        meliminarcliente = new javax.swing.JButton();
        mbuscarcliente = new javax.swing.JButton();
        mbtnseleccionafotocliente = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        comprasclientes = new javax.swing.JTable();
        detallesdecompra = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        mcajavendedores = new javax.swing.JComboBox<>();
        mbuscarvendedor = new javax.swing.JButton();
        jLabel49 = new javax.swing.JLabel();
        mrutafotovendedor = new javax.swing.JTextField();
        mfotovendedor = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        mrfcvendedor = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        mnombrevendedor = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        mapvendedor = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        mamvendedor = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        mcontravendedor = new javax.swing.JPasswordField();
        jLabel55 = new javax.swing.JLabel();
        medadvendedor = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        mcajasexovendedor = new javax.swing.JComboBox<>();
        jLabel57 = new javax.swing.JLabel();
        mfechavendedor = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        mdireccionvendedor = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        msegurovendedor = new javax.swing.JTextField();
        mseleccionarfotovendedor = new javax.swing.JButton();
        mactualizarvendedor = new javax.swing.JButton();
        meliminarvendedor = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        ventasvendedores = new javax.swing.JTable();
        DetallesvENTA = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        mcajaproductos = new javax.swing.JComboBox<>();
        jLabel61 = new javax.swing.JLabel();
        mrutafotoproducto = new javax.swing.JTextField();
        mseleccionafotoproducto = new javax.swing.JButton();
        mfotoproducto = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        mnombreproducto = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        mexistenciaproducto = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        mexistenciaminmaproducto = new javax.swing.JTextField();
        jLabel65 = new javax.swing.JLabel();
        mprecioproducto = new javax.swing.JTextField();
        mbuscarproducto = new javax.swing.JButton();
        jLabel66 = new javax.swing.JLabel();
        mdescripcionproducto = new javax.swing.JTextField();
        mactualizaproducto = new javax.swing.JButton();
        meliminaproducto = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        primera = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Segunda = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        ventasmes = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        ventas = new javax.swing.JTable();
        buscarmes = new javax.swing.JButton();
        ventasanio = new javax.swing.JComboBox<>();
        bventasanio = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        vdetalles = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        vfinalizarventa = new javax.swing.JButton();
        vlblcliente = new javax.swing.JLabel();
        vcajaclientes = new javax.swing.JComboBox<>();
        vinicioventa = new javax.swing.JButton();
        vlblproducto = new javax.swing.JLabel();
        vproducto = new javax.swing.JComboBox<>();
        vfotoproducto = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vDescripcionproducto = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        vlblnombreproducto = new javax.swing.JLabel();
        vlblprecio = new javax.swing.JLabel();
        vlblsigno = new javax.swing.JLabel();
        vagregarcarrito = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        vtabla = new javax.swing.JTable();
        veliminarproducto = new javax.swing.JButton();
        vtotal = new javax.swing.JLabel();
        vtotalconiva = new javax.swing.JLabel();
        vcancelarventa = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        cbuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablacancelar = new javax.swing.JTable();
        cdetalles = new javax.swing.JButton();
        celiminar = new javax.swing.JButton();
        cerrarsesion = new javax.swing.JButton();

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel10.setText("RFC");

        jLabel11.setText("Nombre");

        jLabel12.setText("Apellido paterno");

        jLabel13.setText("Apellido materno");

        jLabel14.setText("Contraseña");

        jLabel15.setText("Edad");

        jLabel16.setText("Fecha de nacimiento");

        jLabel18.setText("Dirección");

        jLabel20.setText("Numero de seguro social");

        registrarVendedor.setText("Registrar");
        registrarVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarVendedorActionPerformed(evt);
            }
        });

        jLabel39.setText("Sexo");

        combovendedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnfotovendedor.setText("Seleccionar");
        btnfotovendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfotovendedorActionPerformed(evt);
            }
        });

        lblfotovendedor.setText("Foto");

        label.setText("Repetir contraseña");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(registrarVendedor)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel20)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtnumerosocialVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel14)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel39)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel18))
                                    .addGap(10, 10, 10)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtdireccionVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtfechanacimientoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(label)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(vrepetircontra))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel12)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtapVendedor))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel11))
                                            .addGap(59, 59, 59)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtnombreVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtrfcVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtamVendedor)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txtedadVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                            .addGap(10, 10, 10)
                                                            .addComponent(combovendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGap(0, 0, Short.MAX_VALUE))
                                                .addComponent(txtcontraVendedor))))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblfotoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnfotovendedor)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblfotovendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtrutavendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblfotovendedor)
                            .addComponent(txtrutavendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnfotovendedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(txtrfcVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(txtnombreVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtapVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtamVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtcontraVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label)
                            .addComponent(vrepetircontra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblfotoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(txtedadVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combovendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtfechanacimientoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtdireccionVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(txtnumerosocialVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(99, 99, 99)
                .addComponent(registrarVendedor)
                .addGap(19, 19, 19))
        );

        jTabbedPane1.addTab("Registrar vendedor", jPanel2);

        jLabel19.setText("Nombre");

        txtnombrecliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnombreclienteActionPerformed(evt);
            }
        });

        jLabel21.setText("Apellido paterno");

        jLabel22.setText("Apellido materno");

        jLabel23.setText("Fecha de nacimiento");

        jLabel24.setText("Edad");

        jLabel25.setText("Dirección");

        jLabel26.setText("Sexo");

        jLabel27.setText("Correo");

        RegistrarCliente.setText("Registrar ");
        RegistrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarClienteActionPerformed(evt);
            }
        });

        jLabel40.setText("Foto");

        selecfotocliente.setText("Seleccionar");
        selecfotocliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecfotoclienteActionPerformed(evt);
            }
        });

        combosexocliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combosexocliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combosexoclienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel40)
                                .addGap(39, 39, 39)
                                .addComponent(txtrutafotocliente))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap(524, Short.MAX_VALUE)
                                .addComponent(selecfotocliente)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblfotocliente, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RegistrarCliente))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addGap(39, 39, 39)
                                .addComponent(txtcorreocliente))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtapmatcliente))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel26))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtedadcliente)
                                    .addComponent(txtdireccioncliente)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(combosexocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel19))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtnombrecliente)
                                    .addComponent(txtappatcliente)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfechacliente)))))
                .addGap(45, 45, 45))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(txtrutafotocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selecfotocliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 281, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblfotocliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtnombrecliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(txtappatcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtapmatcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtfechacliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(txtedadcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(txtdireccioncliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(combosexocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtcorreocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(RegistrarCliente)
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Registrar cliente", jPanel3);

        lblnombreproducto.setText("Nombre producto");

        btnBuscarfoto.setText("Seleccionar");
        btnBuscarfoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarfotoActionPerformed(evt);
            }
        });

        jLabel28.setText("Existencia");

        txtexistenciaproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtexistenciaproductoActionPerformed(evt);
            }
        });

        jLabel41.setText("Existencia minima");

        jLabel42.setText("Precio $");

        jLabel43.setText("Descripción");

        btnregistrarproducto.setText("Registrar");
        btnregistrarproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnregistrarproductoActionPerformed(evt);
            }
        });

        jLabel8.setText("Foto");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnregistrarproducto))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtrutafotoproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnBuscarfoto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 359, Short.MAX_VALUE)
                        .addComponent(lblfotoproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblnombreproducto)
                            .addComponent(jLabel28))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombreproducto)
                            .addComponent(txtexistenciaproducto, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel42)
                            .addComponent(jLabel43))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtexistenciaminimaproducto)
                            .addComponent(txtprecioproducto)
                            .addComponent(txtdescripcionproducto))))
                .addGap(47, 47, 47))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtrutafotoproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscarfoto)
                        .addGap(112, 112, 112))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblfotoproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblnombreproducto)
                    .addComponent(txtNombreproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28)
                    .addComponent(txtexistenciaproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtexistenciaminimaproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel42)
                    .addComponent(txtprecioproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43)
                    .addComponent(txtdescripcionproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                .addComponent(btnregistrarproducto)
                .addGap(54, 54, 54))
        );

        jTabbedPane1.addTab("Registrar producto", jPanel8);

        mcajaclientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        mcajaclientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mcajaclientesItemStateChanged(evt);
            }
        });
        mcajaclientes.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                mcajaclientesMouseDragged(evt);
            }
        });
        mcajaclientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mcajaclientesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mcajaclientesMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mcajaclientesMouseReleased(evt);
            }
        });
        mcajaclientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcajaclientesActionPerformed(evt);
            }
        });

        jLabel9.setText("Clientes");

        jLabel17.setText("Foto");

        jLabel29.setText("Nombre");

        jLabel30.setText("Apellido paterno");

        jLabel31.setText("Apellido materno");

        jLabel44.setText("Fecha de nacimiento");

        jLabel45.setText("Edad");

        jLabel46.setText("Dirección");

        jLabel47.setText("Sexo");

        mcajasexocliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblcorreo234.setText("Correo");

        mactualizarcliente.setText("Actualizar");
        mactualizarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mactualizarclienteActionPerformed(evt);
            }
        });

        meliminarcliente.setText("Eliminar");
        meliminarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meliminarclienteActionPerformed(evt);
            }
        });

        mbuscarcliente.setText("Buscar");
        mbuscarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbuscarclienteActionPerformed(evt);
            }
        });

        mbtnseleccionafotocliente.setText("Seleccionar");
        mbtnseleccionafotocliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbtnseleccionafotoclienteActionPerformed(evt);
            }
        });

        comprasclientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(comprasclientes);

        detallesdecompra.setText("Detalles de compra");
        detallesdecompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detallesdecompraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                        .addComponent(mbuscarcliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mbtnseleccionafotocliente))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mcajaclientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel17)
                                .addGap(31, 31, 31)
                                .addComponent(mrutaftocliente, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addComponent(jLabel44)
                                        .addGap(6, 6, 6)
                                        .addComponent(mfechancimientocliente, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                        .addComponent(jLabel31)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mamcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                                .addComponent(jLabel30)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                            .addGroup(jPanel10Layout.createSequentialGroup()
                                                .addComponent(jLabel29)
                                                .addGap(51, 51, 51)))
                                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(mnombrecliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(mapcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel45)
                                            .addComponent(jLabel46)
                                            .addComponent(jLabel47)
                                            .addComponent(lblcorreo234))
                                        .addGap(45, 45, 45)
                                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mcajasexocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(medadcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(mdireccioncliente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(mcorreocliente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(detallesdecompra)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(mactualizarcliente)
                                .addGap(66, 66, 66)
                                .addComponent(meliminarcliente)))
                        .addGap(1, 1, 1)))
                .addGap(21, 21, 21)
                .addComponent(mfotocliente, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel32)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(mcajaclientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(mrutaftocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mbuscarcliente)
                            .addComponent(mbtnseleccionafotocliente))
                        .addGap(82, 82, 82)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(mnombrecliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(mapcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31)
                            .addComponent(mamcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44)
                            .addComponent(mfechancimientocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel45)
                            .addComponent(medadcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(mdireccioncliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel47)
                            .addComponent(mcajasexocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblcorreo234)
                            .addComponent(mcorreocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mfotocliente, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detallesdecompra)
                    .addComponent(mactualizarcliente)
                    .addComponent(meliminarcliente))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Cliente", jPanel10);

        jLabel48.setText("Vendedores");

        mcajavendedores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        mbuscarvendedor.setText("Buscar");
        mbuscarvendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbuscarvendedorActionPerformed(evt);
            }
        });

        jLabel49.setText("Foto");

        jLabel50.setText("RFC");

        jLabel51.setText("Nombre");

        jLabel52.setText("Apellido Paterno");

        jLabel53.setText("Apellido Materno");

        jLabel54.setText("Contraseña");

        jLabel55.setText("Edad");

        jLabel56.setText("Sexo");

        mcajasexovendedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel57.setText("Fecha de nacimiento");

        jLabel58.setText("Dirección");

        jLabel59.setText("Numero de seguro social");

        mseleccionarfotovendedor.setText("Seleccionar");
        mseleccionarfotovendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mseleccionarfotovendedorActionPerformed(evt);
            }
        });

        mactualizarvendedor.setText("Actualizar");
        mactualizarvendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mactualizarvendedorActionPerformed(evt);
            }
        });

        meliminarvendedor.setText("Eliminar");
        meliminarvendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meliminarvendedorActionPerformed(evt);
            }
        });

        ventasvendedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(ventasvendedores);

        DetallesvENTA.setText("Detalles Venta");
        DetallesvENTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DetallesvENTAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel11Layout.createSequentialGroup()
                                    .addComponent(jLabel57)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(mfechavendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel11Layout.createSequentialGroup()
                                    .addComponent(jLabel58)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mdireccionvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel11Layout.createSequentialGroup()
                                    .addComponent(jLabel59)
                                    .addGap(18, 18, 18)
                                    .addComponent(msegurovendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(mbuscarvendedor))
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(mrfcvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel11Layout.createSequentialGroup()
                                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel51)
                                        .addComponent(jLabel50)
                                        .addComponent(jLabel52))
                                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel11Layout.createSequentialGroup()
                                            .addGap(9, 9, 9)
                                            .addComponent(mnombrevendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel11Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(mapvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel11Layout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(mcontravendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(mamvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(medadvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(mcajasexovendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGap(1, 1, 1)))
                            .addComponent(jLabel53)
                            .addComponent(jLabel54)
                            .addComponent(jLabel55)
                            .addComponent(jLabel56)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(mseleccionarfotovendedor)
                                .addGroup(jPanel11Layout.createSequentialGroup()
                                    .addComponent(jLabel49)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(mrutafotovendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(168, 168, 168)
                                .addComponent(mfotovendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addGap(18, 18, 18)
                        .addComponent(mcajavendedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(109, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mactualizarvendedor)
                .addGap(30, 30, 30)
                .addComponent(meliminarvendedor)
                .addGap(28, 28, 28)
                .addComponent(DetallesvENTA)
                .addGap(210, 210, 210))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel48)
                            .addComponent(mcajavendedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mbuscarvendedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(mrfcvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(mfotovendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel49)
                                    .addComponent(mrutafotovendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mseleccionarfotovendedor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel51)
                                    .addComponent(mnombrevendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mapvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel52))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel53)
                                    .addComponent(mamvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel54)
                                    .addComponent(mcontravendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel55)
                                    .addComponent(medadvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel56)
                                    .addComponent(mcajasexovendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel57)
                                    .addComponent(mfechavendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mdireccionvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel58))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(msegurovendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel59))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(meliminarvendedor)
                            .addComponent(mactualizarvendedor)
                            .addComponent(DetallesvENTA))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Vendedor", jPanel11);

        jLabel60.setText("Productos");

        mcajaproductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        mcajaproductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcajaproductosActionPerformed(evt);
            }
        });

        jLabel61.setText("Foto");

        mseleccionafotoproducto.setText("Selecciona");
        mseleccionafotoproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mseleccionafotoproductoActionPerformed(evt);
            }
        });

        jLabel62.setText("Nombre producto");

        jLabel63.setText("Existencia");

        jLabel64.setText("Existencia minima");

        jLabel65.setText("Precio $");

        mbuscarproducto.setText("Buscar");
        mbuscarproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbuscarproductoActionPerformed(evt);
            }
        });

        jLabel66.setText("Descripción");

        mactualizaproducto.setText("Actualizar");
        mactualizaproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mactualizaproductoActionPerformed(evt);
            }
        });

        meliminaproducto.setText("Eliminar");
        meliminaproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meliminaproductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(312, 312, 312)
                        .addComponent(mactualizaproducto))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel60)
                                .addGap(1, 1, 1)
                                .addComponent(mcajaproductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mbuscarproducto))
                        .addGap(98, 98, 98)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel61)
                                .addGap(18, 18, 18)
                                .addComponent(mrutafotoproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel63)
                                    .addComponent(jLabel62)
                                    .addComponent(jLabel64)
                                    .addComponent(jLabel65)
                                    .addComponent(jLabel66))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mnombreproducto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mexistenciaproducto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mexistenciaminmaproducto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mprecioproducto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mdescripcionproducto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(meliminaproducto, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(mseleccionafotoproducto))
                        .addGap(44, 44, 44)
                        .addComponent(mfotoproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(229, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mfotoproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel60)
                                .addGap(39, 39, 39)
                                .addComponent(mbuscarproducto))
                            .addComponent(mcajaproductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mrutafotoproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel61))
                                .addGap(11, 11, 11)
                                .addComponent(mseleccionafotoproducto)))
                        .addGap(68, 68, 68)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel62)
                            .addComponent(mnombreproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel63)
                            .addComponent(mexistenciaproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel64)
                            .addComponent(mexistenciaminmaproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel65)
                            .addComponent(mprecioproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel66)
                            .addComponent(mdescripcionproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(meliminaproducto)
                            .addComponent(mactualizaproducto)))))
        );

        jTabbedPane3.addTab("Producto", jPanel12);

        jLabel3.setText("Ventas del mes ");

        jLabel4.setText("Ventas del año");

        jLabel5.setText("Rango de fechas de");

        jLabel6.setText("a");

        jButton2.setText("Ventas del día");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        ventasmes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ventas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(ventas);

        buscarmes.setText("Buscar");
        buscarmes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarmesActionPerformed(evt);
            }
        });

        ventasanio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        bventasanio.setText("Buscar");
        bventasanio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bventasanioActionPerformed(evt);
            }
        });

        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        vdetalles.setText("Detalles de venta");
        vdetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vdetallesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 951, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(ventasmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(jLabel4))
                            .addComponent(buscarmes))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(ventasanio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jLabel5))
                            .addComponent(bventasanio))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(primera, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Segunda, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton4)))
                    .addComponent(vdetalles))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(primera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(Segunda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(ventasmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ventasanio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(buscarmes))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bventasanio)
                            .addComponent(jButton4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(vdetalles)
                .addContainerGap(299, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Ventas", jPanel4);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        jTabbedPane1.addTab("Administrar", jPanel9);

        vfinalizarventa.setText("Finalizar Venta");
        vfinalizarventa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vfinalizarventaActionPerformed(evt);
            }
        });

        vlblcliente.setText("Cliente");

        vcajaclientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vcajaclientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vcajaclientesActionPerformed(evt);
            }
        });

        vinicioventa.setText("Realizar Venta");
        vinicioventa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vinicioventaActionPerformed(evt);
            }
        });

        vlblproducto.setText("Producto");

        vproducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vproducto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                vproductoItemStateChanged(evt);
            }
        });
        vproducto.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                vproductoMouseDragged(evt);
            }
        });
        vproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vproductoActionPerformed(evt);
            }
        });

        vDescripcionproducto.setColumns(20);
        vDescripcionproducto.setRows(5);
        jScrollPane1.setViewportView(vDescripcionproducto);

        vlblsigno.setText("$");

        vagregarcarrito.setText("Agregar mas");
        vagregarcarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vagregarcarritoActionPerformed(evt);
            }
        });

        vtabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdProducto", "Nombre", "Descripción", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(vtabla);

        veliminarproducto.setText("Eliminar Producto");
        veliminarproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                veliminarproductoActionPerformed(evt);
            }
        });

        vtotal.setText("Total");

        vtotalconiva.setText("Total con iva %16");

        vcancelarventa.setText("Cancelar");
        vcancelarventa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vcancelarventaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(vlblcliente)
                        .addGap(18, 18, 18)
                        .addComponent(vcajaclientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(vlblproducto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(vproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(vinicioventa)
                            .addComponent(vagregarcarrito)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(veliminarproducto)
                            .addComponent(vtotal)
                            .addComponent(vtotalconiva))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(vlblnombreproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(vlblsigno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(vlblprecio, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(vfotoproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(vcancelarventa, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(vfinalizarventa)))
                .addGap(81, 81, 81))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(vfotoproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(vlblnombreproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(vlblprecio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(vlblsigno))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(vfinalizarventa)
                                    .addComponent(vcancelarventa)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(53, 53, 53)
                                .addComponent(veliminarproducto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(vtotalconiva)
                                .addGap(18, 18, 18)
                                .addComponent(vtotal)
                                .addGap(28, 28, 28))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vlblcliente)
                            .addComponent(vcajaclientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(vinicioventa)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vlblproducto)
                            .addComponent(vproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(vagregarcarrito)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Nueva Venta", jPanel1);

        cbuscar.setText("Registro de ventas");
        cbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbuscarActionPerformed(evt);
            }
        });

        tablacancelar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idCabVenta", "Numero de folio", "IdVend", "Fecha de venta", "Total", "Total con iva", "Nombre del cliente"
            }
        ));
        jScrollPane2.setViewportView(tablacancelar);

        cdetalles.setText("Detalles de Producto");
        cdetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdetallesActionPerformed(evt);
            }
        });

        celiminar.setText("Eliminar venta");
        celiminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                celiminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(cbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(cdetalles, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(celiminar, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 987, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(cbuscar)
                .addGap(67, 67, 67)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cdetalles)
                    .addComponent(celiminar))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cancelar Venta", jPanel5);

        cerrarsesion.setText("Cerrar Sesión");
        cerrarsesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarsesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1007, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cerrarsesion)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(cerrarsesion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 664, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cerrarsesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarsesionActionPerformed
        Index i = new Index();
        this.setVisible(false);
        i.setVisible(true);

    }//GEN-LAST:event_cerrarsesionActionPerformed

    private void btnregistrarproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnregistrarproductoActionPerformed
        String s = "";
        if (IO.textfield_requerido(txtNombreproducto, txtexistenciaproducto, txtdescripcionproducto, txtexistenciaminimaproducto, txtprecioproducto, txtrutafotoproducto)) {
            if (IO.VerificaPrecio(txtprecioproducto.getText())) {
                if (IO.Verificaexistencia(txtexistenciaproducto.getText()) && IO.Verificaexistencia(txtexistenciaminimaproducto.getText())) {

                    String rutafotillo = IO.obtenerRutaCorregidaWindows(txtrutafotoproducto.getText(), "\\", "\\\\");
                    Map<String, String> map = new HashMap();
                    map.put("nombreP", txtNombreproducto.getText());
                    map.put("Descripcion", txtdescripcionproducto.getText());
                    map.put("existencia", txtexistenciaproducto.getText());
                    map.put("existenciaMin", txtexistenciaminimaproducto.getText());
                    map.put("precio", txtprecioproducto.getText());
                    map.put("ruta", rutafotillo);
                    if (db.insertar("producto", map)) {
                        txtNombreproducto.setText("");
                        txtdescripcionproducto.setText("");
                        txtexistenciaproducto.setText("");
                        txtexistenciaminimaproducto.setText("");
                        txtprecioproducto.setText("");
                        txtrutafotoproducto.setText("");
                        lblfotoproducto.setIcon(null);
                        mcajaproductos.removeAllItems();
                        ArrayList productos = db.excecuteQuery("SELECT idProducto,nombreP FROM producto");
                        for (int i = 0; i < productos.size(); i++) {
                            s = productos.get(i).toString();
                            if (!s.equals("[root, ]")) {

                                mcajaproductos.addItem(s);
                                s = "";
                            }
                        }
                        v = false;
                        vproducto.removeAllItems();
                        ArrayList vproductos = db.excecuteQuery("SELECT idProducto,nombreP FROM producto");
                        vproducto.addItem("Seleccione un producto");
                        for (int i = 0; i < vproductos.size(); i++) {
                            s = vproductos.get(i).toString();
                            if (!s.equals("[root, ]")) {

                                vproducto.addItem(s);
                                s = "";
                            }
                        }
                        v = true;
                        JOptionPane.showMessageDialog(null, "Producto Registrado");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Ingresa una existencia o existencia minima valida");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingresa un precio valido");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Necesitas llenar todos los campos");
        }
    }//GEN-LAST:event_btnregistrarproductoActionPerformed

    private void txtexistenciaproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtexistenciaproductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtexistenciaproductoActionPerformed

    private void btnBuscarfotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarfotoActionPerformed
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Formatos de Imagenes", "jpg", "jpeg", "png");
        JFileChooser archivo = new JFileChooser();
        archivo.addChoosableFileFilter(filtro);
        archivo.setDialogTitle("Abrir Imagen");
        File ruta = new File("C:\\Users\\pc\\Documents\\Universidad\\quinto semestre\\Fundamentos Base de datos\\proyectos\\Java\\Aplicacion Punto De Venta\\Fotos\\Productos");
        archivo.setCurrentDirectory(ruta);
        int ventana = archivo.showOpenDialog(null);
        if (ventana == JFileChooser.APPROVE_OPTION) {
            File file = archivo.getSelectedFile();
            txtrutafotoproducto.setText(String.valueOf(file));
            //System.out.println(txtrutafotocliente.getText());
            Image fotoproducto = getToolkit().getImage(txtrutafotoproducto.getText());
            fotoproducto = fotoproducto.getScaledInstance(288, 161, Image.SCALE_DEFAULT);
            lblfotoproducto.setIcon(new ImageIcon(fotoproducto));
        }
    }//GEN-LAST:event_btnBuscarfotoActionPerformed

    private void combosexoclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combosexoclienteActionPerformed

    }//GEN-LAST:event_combosexoclienteActionPerformed

    private void selecfotoclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecfotoclienteActionPerformed
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Formatos de Imagenes", "jpg", "jpeg", "png");
        JFileChooser archivo = new JFileChooser();
        archivo.addChoosableFileFilter(filtro);
        archivo.setDialogTitle("Abrir Imagen");
        File ruta = new File("C:\\Users\\pc\\Documents\\Universidad\\quinto semestre\\Fundamentos Base de datos\\proyectos\\Java\\Aplicacion Punto De Venta\\Fotos\\Clientes");
        archivo.setCurrentDirectory(ruta);
        int ventana = archivo.showOpenDialog(null);
        if (ventana == JFileChooser.APPROVE_OPTION) {
            File file = archivo.getSelectedFile();
            txtrutafotocliente.setText(String.valueOf(file));
            //System.out.println(txtrutafotocliente.getText());
            Image fotocliente = getToolkit().getImage(txtrutafotocliente.getText());
            fotocliente = fotocliente.getScaledInstance(342, 250, Image.SCALE_DEFAULT);
            lblfotocliente.setIcon(new ImageIcon(fotocliente));
        }
    }//GEN-LAST:event_selecfotoclienteActionPerformed

    private void RegistrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarClienteActionPerformed
        String s = "";
        if (IO.textfield_requerido(txtnombrecliente, txtappatcliente, txtapmatcliente, txtfechacliente, txtedadcliente, txtdireccioncliente, txtcorreocliente, txtrutafotocliente)) {
            if (IO.VerificaEdad(txtedadcliente.getText())) {

                String rutafotillo = IO.obtenerRutaCorregidaWindows(txtrutafotocliente.getText(), "\\", "\\\\");

                /*String insertar ="INSERT INTO cliente (nombre, ApePat, ApeMat, rfc, direccion, sexo, fechanacimiento, edad, correo, ruta) VALUES "
                    + "("+"'"+txtnombrecliente.getText()+"'"+" , "+"'"+txtappatcliente.getText()+"'"+" , "+"'"+txtapmatcliente.getText()+"'"+" , "+"'"
                    +txtrfccliente.getText()+"'"+" , "+"'"+txtdireccioncliente.getText()+"'"+" , "+"'"+"H"+"'"+" , "+"'"+txtfechacliente.getText()+"'"+" , "+
                    "'"+txtedadcliente.getText()+"'"+" , "+"'"+txtcorreocliente.getText()+"'"+" , "
                    +"'"+rutafotillo+"'"+")";
                    db.insertarcliente(insertar);*/
                Map<String, String> map = new HashMap();
                map.put("nombre", txtnombrecliente.getText());
                map.put("ApePat", txtappatcliente.getText());
                map.put("ApeMat", txtapmatcliente.getText());
                map.put("direccion", txtdireccioncliente.getText());
                map.put("sexo", combosexocliente.getSelectedItem().toString());
                map.put("fechanacimiento", txtfechacliente.getText());
                map.put("edad", txtedadcliente.getText());
                map.put("correo", txtcorreocliente.getText());
                map.put("ruta", rutafotillo);

                if (db.insertar("cliente", map)) {
                    txtnombrecliente.setText("");
                    txtappatcliente.setText("");
                    txtapmatcliente.setText("");
                    txtdireccioncliente.setText("");
                    combosexocliente.setSelectedIndex(0);
                    txtfechacliente.setText("");
                    txtedadcliente.setText("");
                    txtcorreocliente.setText("");
                    txtrutafotocliente.setText("");
                    lblfotocliente.setIcon(null);
                    mcajaclientes.removeAllItems();
                    ArrayList clientes = db.excecuteQuery("SELECT idCte,nombre FROM cliente");
                    for (int i = 0; i < clientes.size(); i++) {
                        s = clientes.get(i).toString();

                        mcajaclientes.addItem(s);
                        s = "";

                    }
                    vcajaclientes.removeAllItems();
                    ArrayList vclientes = db.excecuteQuery("SELECT idCte,nombre FROM cliente");
                    for (int i = 0; i < vclientes.size(); i++) {
                        s = vclientes.get(i).toString();

                        vcajaclientes.addItem(s);
                        s = "";

                    }
                    JOptionPane.showMessageDialog(null, "Cliente Registrado");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingresa una edad valida");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Necesitas llenar todos los campos");
        }
    }//GEN-LAST:event_RegistrarClienteActionPerformed

    private void txtnombreclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnombreclienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombreclienteActionPerformed

    private void btnfotovendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfotovendedorActionPerformed
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Formatos de Imagenes", "jpg", "jpeg", "png");
        JFileChooser archivo = new JFileChooser();
        archivo.addChoosableFileFilter(filtro);
        archivo.setDialogTitle("Abrir Imagen");
        File ruta = new File("C:\\Users\\pc\\Documents\\Universidad\\quinto semestre\\Fundamentos Base de datos\\proyectos\\Java\\Aplicacion Punto De Venta\\Fotos\\Vendedores");
        archivo.setCurrentDirectory(ruta);
        int ventana = archivo.showOpenDialog(null);
        if (ventana == JFileChooser.APPROVE_OPTION) {
            File file = archivo.getSelectedFile();
            txtrutavendedor.setText(String.valueOf(file));
            //System.out.println(txtrutafotocliente.getText());
            Image fotocliente = getToolkit().getImage(txtrutavendedor.getText());
            fotocliente = fotocliente.getScaledInstance(383, 360, Image.SCALE_DEFAULT);
            lblfotoVendedor.setIcon(new ImageIcon(fotocliente));
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnfotovendedorActionPerformed

    private void registrarVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarVendedorActionPerformed
        Calendar c1 = Calendar.getInstance();
        String s = "";
        String fechaingreso = "" + Integer.toString(c1.get(Calendar.YEAR)) + "-" + Integer.toString(c1.get(Calendar.MONTH)) + "-" + Integer.toString(c1.get(Calendar.DATE));
        if (IO.textfield_requerido(txtrfcVendedor, txtnombreVendedor, txtapVendedor, txtamVendedor, txtcontraVendedor, txtedadVendedor,
                txtfechanacimientoVendedor, txtdireccionVendedor, txtnumerosocialVendedor, txtrutavendedor,vrepetircontra)) {
            if(txtcontraVendedor.getText().equals(vrepetircontra.getText())){
            if (rfcvendedor.equals("root") && contravendedor.equals("capsize")) {
                if (txtrfcVendedor.getText().length() == 13) {
                    if (txtnumerosocialVendedor.getText().length() == 11) {
                        if (IO.VerificaEdad(txtedadVendedor.getText())) {
                            String rutafotillo = IO.obtenerRutaCorregidaWindows(txtrutavendedor.getText(), "\\", "\\\\");
                            Map<String, String> map = new HashMap();
                            map.put("rfc", txtrfcVendedor.getText());
                            map.put("nombre", txtnombreVendedor.getText());
                            map.put("apePat", txtapVendedor.getText());
                            map.put("apeMat", txtamVendedor.getText());
                            map.put("contrasenia", txtcontraVendedor.getText());
                            map.put("sexo", combovendedor.getSelectedItem().toString());
                            map.put("fechanacimiento", txtfechanacimientoVendedor.getText());
                            map.put("edad", txtedadVendedor.getText());
                            map.put("fechaIngreso", fechaingreso);
                            map.put("direccion", txtdireccionVendedor.getText());
                            map.put("NumSeguroSocial", txtnumerosocialVendedor.getText());
                            map.put("ruta", rutafotillo);
                            if (db.insertar("vendedor", map)) {
                                txtrfcVendedor.setText("");
                                txtnombreVendedor.setText("");
                                txtapVendedor.setText("");
                                txtamVendedor.setText("");
                                txtcontraVendedor.setText("");
                                combovendedor.setSelectedIndex(0);
                                txtfechanacimientoVendedor.setText("");
                                txtedadVendedor.setText("");
                                fechaingreso = fechaingreso = "" + Integer.toString(c1.get(Calendar.YEAR)) + "-" + Integer.toString(c1.get(Calendar.MONTH)) + "-" + Integer.toString(c1.get(Calendar.DATE));;
                                txtdireccionVendedor.setText("");
                                txtnumerosocialVendedor.setText("");
                                txtrutavendedor.setText("");
                                lblfotoVendedor.setIcon(null);
                                mcajavendedores.removeAllItems();
                                ArrayList vendedores = db.excecuteQuery("SELECT rfc,nombre FROM vendedor");
                                for (int i = 0; i < vendedores.size(); i++) {
                                    s = vendedores.get(i).toString();
                                    if (!s.equals("[root, ]")) {

                                        mcajavendedores.addItem(s);
                                        s = "";
                                    }
                                }
                                JOptionPane.showMessageDialog(null, "Vendedor Registrado");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Ingresa una edad valida");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "El numero de seguro social debe contener 13 digitos");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El RFC debe contener 13 digitos");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Solo el administrador puede agregar vendedores");
            }
            }else{
               JOptionPane.showMessageDialog(null, "Verifica tu contraseña"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "Necesitas llenar todos los campos");
        }
    }//GEN-LAST:event_registrarVendedorActionPerformed

    private void mcajaclientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcajaclientesActionPerformed


    }//GEN-LAST:event_mcajaclientesActionPerformed

    private void mcajaclientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mcajaclientesMouseClicked

    }//GEN-LAST:event_mcajaclientesMouseClicked

    private void mbuscarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbuscarclienteActionPerformed
        if (mcajaclientes.getItemCount() != 0) {
            modelo2 = new DefaultTableModel();
            modelo2.addColumn("Id cabecera de venta");
            modelo2.addColumn("id vendedor");
            modelo2.addColumn("Fecha Venta");
            modelo2.addColumn("Total");
            modelo2.addColumn("Total con iva");

            comprasclientes.setModel(modelo2);
            mbtnseleccionafotocliente.setVisible(true);
            mactualizarcliente.setVisible(true);
            meliminarcliente.setVisible(true);
            detallesdecompra.setVisible(true);
            key = IO.recuperarKeymodificada(IO.recuperarKey(mcajaclientes.getSelectedItem().toString()));
            mnombrecliente.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT nombre FROM cliente WHERE idCte=" + key).toString()));
            mapcliente.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT ApePat FROM cliente WHERE idCte=" + key).toString()));
            mamcliente.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT ApeMat FROM cliente WHERE idCte=" + key).toString()));
            mdireccioncliente.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT direccion FROM cliente WHERE idCte=" + key).toString()));
            mfechancimientocliente.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT fechanacimiento FROM cliente WHERE idCte=" + key).toString()));
            medadcliente.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT edad FROM cliente WHERE idCte=" + key).toString()));
            String sexo = IO.recuperarcamposmodificados(db.excecuteQuery("SELECT sexo FROM cliente WHERE idCte=" + key).toString());
            //System.out.println(sexo);
            if (sexo.equals("H")) {
                mcajasexocliente.setSelectedIndex(0);
            } else {
                mcajasexocliente.setSelectedIndex(1);
            }
            mcorreocliente.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT correo FROM cliente WHERE idCte=" + key).toString()));

            String mrutacliente = IO.recuperarcamposmodificados(db.excecuteQuery("SELECT ruta FROM cliente WHERE idCte=" + key).toString());
            mrutaftocliente.setText(mrutacliente);
            Image fotocliente = getToolkit().getImage(mrutacliente);
            fotocliente = fotocliente.getScaledInstance(226, 281, Image.SCALE_DEFAULT);
            mfotocliente.setIcon(new ImageIcon(fotocliente));

            ArrayList l = db.excecuteQuery("SELECT idCabVta,idVend,fechaVta,total,totalConIva FROM cabventa WHERE idCte=" + key);
            Object[] object = new Object[6];
            for (int i = 0; i < l.size(); i++) {
                StringTokenizer tokens = new StringTokenizer(l.get(i).toString());
                int j = 0;
                while (tokens.hasMoreTokens()) {
                    object[j] = tokens.nextToken();
                    j++;
                }
                modelo2.addRow(object);
            }

        }
    }//GEN-LAST:event_mbuscarclienteActionPerformed

    private void mbtnseleccionafotoclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbtnseleccionafotoclienteActionPerformed
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Formatos de Imagenes", "jpg", "jpeg", "png");
        JFileChooser archivo = new JFileChooser();
        archivo.addChoosableFileFilter(filtro);
        archivo.setDialogTitle("Abrir Imagen");
        File ruta = new File("C:\\Users\\pc\\Documents\\Universidad\\quinto semestre\\Fundamentos Base de datos\\proyectos\\Java\\Aplicacion Punto De Venta\\Fotos\\Clientes");
        archivo.setCurrentDirectory(ruta);
        int ventana = archivo.showOpenDialog(null);
        if (ventana == JFileChooser.APPROVE_OPTION) {
            File file = archivo.getSelectedFile();
            mrutaftocliente.setText(String.valueOf(file));
            //System.out.println(txtrutafotocliente.getText());
            Image fotocliente = getToolkit().getImage(mrutaftocliente.getText());
            fotocliente = fotocliente.getScaledInstance(226, 281, Image.SCALE_DEFAULT);
            mfotocliente.setIcon(new ImageIcon(fotocliente));
        }        // TODO add your handling code here:
    }//GEN-LAST:event_mbtnseleccionafotoclienteActionPerformed

    private void mactualizarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mactualizarclienteActionPerformed
        String idCte[] = {"idCte", key};
        if (IO.textfield_requerido(mnombrecliente, mapcliente, mamcliente, mfechancimientocliente, medadcliente, mdireccioncliente, mcorreocliente, mrutaftocliente)) {
            if (IO.VerificaEdad(medadcliente.getText())) {

                String rutafotillo = IO.obtenerRutaCorregidaWindows(mrutaftocliente.getText(), "\\", "\\\\");

                /*String insertar ="INSERT INTO cliente (nombre, ApePat, ApeMat, rfc, direccion, sexo, fechanacimiento, edad, correo, ruta) VALUES "
                    + "("+"'"+txtnombrecliente.getText()+"'"+" , "+"'"+txtappatcliente.getText()+"'"+" , "+"'"+txtapmatcliente.getText()+"'"+" , "+"'"
                    +txtrfccliente.getText()+"'"+" , "+"'"+txtdireccioncliente.getText()+"'"+" , "+"'"+"H"+"'"+" , "+"'"+txtfechacliente.getText()+"'"+" , "+
                    "'"+txtedadcliente.getText()+"'"+" , "+"'"+txtcorreocliente.getText()+"'"+" , "
                    +"'"+rutafotillo+"'"+")";
                    db.insertarcliente(insertar);*/
                Map<String, String> map = new HashMap();
                map.put("nombre", mnombrecliente.getText());
                map.put("ApePat", mapcliente.getText());
                map.put("ApeMat", mamcliente.getText());
                map.put("direccion", mdireccioncliente.getText());
                map.put("sexo", mcajasexocliente.getSelectedItem().toString());
                map.put("fechanacimiento", mfechancimientocliente.getText());
                map.put("edad", medadcliente.getText());
                map.put("correo", mcorreocliente.getText());
                map.put("ruta", rutafotillo);

                if (db.update("cliente", map, idCte)) {
                    mnombrecliente.setText("");
                    mapcliente.setText("");
                    mamcliente.setText("");
                    mdireccioncliente.setText("");
                    mcajasexocliente.setSelectedIndex(0);
                    mfechancimientocliente.setText("");
                    medadcliente.setText("");
                    mcorreocliente.setText("");
                    mrutaftocliente.setText("");
                    mfotocliente.setIcon(null);
                    mbtnseleccionafotocliente.setVisible(false);
                    mactualizarcliente.setVisible(false);
                    meliminarcliente.setVisible(false);
                    detallesdecompra.setVisible(false);
                    modelo2 = new DefaultTableModel();
                    modelo2.addColumn("Id cabecera de venta");
                    modelo2.addColumn("id vendedor");
                    modelo2.addColumn("Fecha Venta");
                    modelo2.addColumn("Total");
                    modelo2.addColumn("Total con iva");

                    comprasclientes.setModel(modelo2);
                    JOptionPane.showMessageDialog(null, "Cliente Actualizado");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingresa una edad valida");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Necesitas llenar todos los campos");
        }
    }//GEN-LAST:event_mactualizarclienteActionPerformed

    private void meliminarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meliminarclienteActionPerformed
        String s = "";
        if (IO.textfield_requerido(mnombrecliente, mapcliente, mamcliente, mdireccioncliente, mfechancimientocliente, medadcliente,
                mcorreocliente, mrutaftocliente)) {

            Map<String, String> map = new HashMap();
            map.put("idCte", key);
            if (db.delete("cliente", map)) {
                mnombrecliente.setText("");
                mapcliente.setText("");
                mamcliente.setText("");
                mdireccioncliente.setText("");
                mcajasexocliente.setSelectedIndex(0);
                mfechancimientocliente.setText("");
                medadcliente.setText("");
                mcorreocliente.setText("");
                mrutaftocliente.setText("");
                mfotocliente.setIcon(null);
                mbtnseleccionafotocliente.setVisible(false);
                mactualizarcliente.setVisible(false);
                meliminarcliente.setVisible(false);
                detallesdecompra.setVisible(false);
                mcajaclientes.removeAllItems();
                ArrayList clientes = db.excecuteQuery("SELECT idCte,nombre FROM cliente");
                for (int i = 0; i < clientes.size(); i++) {
                    s = clientes.get(i).toString();

                    mcajaclientes.addItem(s);
                    s = "";

                }
                vcajaclientes.removeAllItems();
                ArrayList vclientes = db.excecuteQuery("SELECT idCte,nombre FROM cliente");
                for (int i = 0; i < vclientes.size(); i++) {
                    s = vclientes.get(i).toString();

                    vcajaclientes.addItem(s);
                    s = "";

                }
                modelo2 = new DefaultTableModel();
                modelo2.addColumn("Id cabecera de venta");
                modelo2.addColumn("id vendedor");
                modelo2.addColumn("Fecha Venta");
                modelo2.addColumn("Total");
                modelo2.addColumn("Total con iva");

                comprasclientes.setModel(modelo2);
                JOptionPane.showMessageDialog(null, "Cliente Eliminado");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Necesitas llenar todos los campos");
        }
    }//GEN-LAST:event_meliminarclienteActionPerformed

    private void mbuscarvendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbuscarvendedorActionPerformed
        if (mcajavendedores.getItemCount() != 0) {
            modelo3 = new DefaultTableModel();
            modelo3.addColumn("Id cabecera de venta");
            modelo3.addColumn("id cliente");
            modelo3.addColumn("Fecha Venta");
            modelo3.addColumn("Total");
            modelo3.addColumn("Total con iva");

            ventasvendedores.setModel(modelo3);
            mseleccionarfotovendedor.setVisible(true);
            mactualizarvendedor.setVisible(true);
            meliminarvendedor.setVisible(true);
            DetallesvENTA.setVisible(true);
            key = IO.recuperarKeymodificada(IO.recuperarKey(mcajavendedores.getSelectedItem().toString()));
            mrfcvendedor.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT rfc FROM vendedor WHERE rfc='" + key + "'").toString()));
            mnombrevendedor.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT nombre FROM vendedor WHERE rfc='" + key + "'").toString()));
            mapvendedor.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT apePat FROM vendedor WHERE rfc='" + key + "'").toString()));
            mamvendedor.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT apeMat FROM vendedor WHERE rfc='" + key + "'").toString()));
            mcontravendedor.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT contrasenia FROM vendedor WHERE rfc='" + key + "'").toString()));
            mfechavendedor.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT fechanacimiento FROM vendedor WHERE rfc='" + key + "'").toString()));
            mdireccionvendedor.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT direccion FROM vendedor WHERE rfc='" + key + "'").toString()));
            medadvendedor.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT edad FROM vendedor WHERE rfc='" + key + "'").toString()));
            String sexo = IO.recuperarcamposmodificados(db.excecuteQuery("SELECT sexo FROM vendedor WHERE rfc='" + key + "'").toString());
            //System.out.println(sexo);
            if (sexo.equals("H")) {
                mcajasexovendedor.setSelectedIndex(0);
            } else {
                mcajasexovendedor.setSelectedIndex(1);
            }
            msegurovendedor.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT NumSeguroSocial FROM vendedor WHERE rfc='" + key + "'").toString()));

            String mrutavendedor = IO.recuperarcamposmodificados(db.excecuteQuery("SELECT ruta FROM vendedor WHERE rfc='" + key + "'").toString());
            mrutafotovendedor.setText(mrutavendedor);
            Image fotovendedor = getToolkit().getImage(mrutavendedor);
            fotovendedor = fotovendedor.getScaledInstance(265, 172, Image.SCALE_DEFAULT);
            mfotovendedor.setIcon(new ImageIcon(fotovendedor));
            ArrayList l = db.excecuteQuery("SELECT idCabVta,idCte,fechaVta,total,totalConIva FROM cabventa WHERE idVend='" + key + "'");
            Object[] object = new Object[6];
            for (int i = 0; i < l.size(); i++) {
                StringTokenizer tokens = new StringTokenizer(l.get(i).toString());
                int j = 0;
                while (tokens.hasMoreTokens()) {
                    object[j] = tokens.nextToken();
                    j++;
                }
                modelo3.addRow(object);
            }
        }
    }//GEN-LAST:event_mbuscarvendedorActionPerformed

    private void mseleccionarfotovendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mseleccionarfotovendedorActionPerformed
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Formatos de Imagenes", "jpg", "jpeg", "png");
        JFileChooser archivo = new JFileChooser();
        archivo.addChoosableFileFilter(filtro);
        archivo.setDialogTitle("Abrir Imagen");
        File ruta = new File("C:\\Users\\pc\\Documents\\Universidad\\quinto semestre\\Fundamentos Base de datos\\proyectos\\Java\\Aplicacion Punto De Venta\\Fotos\\Vendedores");
        archivo.setCurrentDirectory(ruta);
        int ventana = archivo.showOpenDialog(null);
        if (ventana == JFileChooser.APPROVE_OPTION) {
            File file = archivo.getSelectedFile();
            mrutafotovendedor.setText(String.valueOf(file));
            //System.out.println(txtrutafotocliente.getText());
            Image fotocliente = getToolkit().getImage(mrutafotovendedor.getText());
            fotocliente = fotocliente.getScaledInstance(265, 172, Image.SCALE_DEFAULT);
            mfotovendedor.setIcon(new ImageIcon(fotocliente));
        }        // TODO add your handling code here:
    }//GEN-LAST:event_mseleccionarfotovendedorActionPerformed

    private void mactualizarvendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mactualizarvendedorActionPerformed
        String rfc[] = {"rfc", key};
        if (IO.textfield_requerido(mrfcvendedor, mnombrevendedor, mapvendedor, mamvendedor, mcontravendedor,
                mfechavendedor, medadvendedor, mdireccionvendedor, msegurovendedor, mrutafotovendedor)) {
            if (rfcvendedor.equals("root") && contravendedor.equals("capsize")) {
                if (mrfcvendedor.getText().length() == 13) {
                    if (msegurovendedor.getText().length() == 11) {
                        if (IO.VerificaEdad(medadvendedor.getText())) {
                            String rutafotillo = IO.obtenerRutaCorregidaWindows(mrutafotovendedor.getText(), "\\", "\\\\");
                            Map<String, String> map = new HashMap();
                            map.put("rfc", mrfcvendedor.getText());
                            map.put("nombre", mnombrevendedor.getText());
                            map.put("apePat", mapvendedor.getText());
                            map.put("apeMat", mamvendedor.getText());
                            map.put("contrasenia", mcontravendedor.getText());
                            map.put("sexo", mcajasexovendedor.getSelectedItem().toString());
                            map.put("fechanacimiento", mfechavendedor.getText());
                            map.put("edad", medadvendedor.getText());
                            map.put("direccion", mdireccionvendedor.getText());
                            map.put("NumSeguroSocial", msegurovendedor.getText());
                            map.put("ruta", rutafotillo);
                            if (db.update("vendedor", map, rfc)) {
                                mrfcvendedor.setText("");
                                mnombrevendedor.setText("");
                                mapvendedor.setText("");
                                mamvendedor.setText("");
                                mcontravendedor.setText("");
                                mcajasexovendedor.setSelectedIndex(0);
                                mfechavendedor.setText("");
                                medadvendedor.setText("");
                                mdireccionvendedor.setText("");
                                msegurovendedor.setText("");
                                mrutafotovendedor.setText("");
                                mfotovendedor.setIcon(null);
                                mseleccionarfotovendedor.setVisible(false);
                                mactualizarvendedor.setVisible(false);
                                meliminarvendedor.setVisible(false);
                                DetallesvENTA.setVisible(false);
                                modelo3 = new DefaultTableModel();
                                modelo3.addColumn("Id cabecera de venta");
                                modelo3.addColumn("id cliente");
                                modelo3.addColumn("Fecha Venta");
                                modelo3.addColumn("Total");
                                modelo3.addColumn("Total con iva");

                                ventasvendedores.setModel(modelo3);
                                JOptionPane.showMessageDialog(null, "Vendedor Actualizado");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Ingresa una edad valida");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "El numero de seguro social debe contener 13 digitos");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El RFC debe contener 13 digitos");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Solo el administrador puede eliminar vendedores");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Necesitas llenar todos los campos");
        }
    }//GEN-LAST:event_mactualizarvendedorActionPerformed

    private void meliminarvendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meliminarvendedorActionPerformed
        String s = "";
        if (IO.textfield_requerido(mrfcvendedor, mnombrevendedor, mapvendedor, mamvendedor, mcontravendedor,
                mfechavendedor, medadvendedor, mdireccionvendedor, msegurovendedor, mrutafotovendedor)) {
            if (rfcvendedor.equals("root") && contravendedor.equals("capsize")) {
                if (mrfcvendedor.getText().length() == 13) {
                    if (msegurovendedor.getText().length() == 11) {
                        if (IO.VerificaEdad(medadvendedor.getText())) {
                            Map<String, String> map = new HashMap();
                            map.put("rfc", key);
                            if (db.delete("vendedor", map)) {
                                modelo3 = new DefaultTableModel();
                                modelo3.addColumn("Id cabecera de venta");
                                modelo3.addColumn("id cliente");
                                modelo3.addColumn("Fecha Venta");
                                modelo3.addColumn("Total");
                                modelo3.addColumn("Total con iva");

                                ventasvendedores.setModel(modelo3);
                                mrfcvendedor.setText("");
                                mnombrevendedor.setText("");
                                mapvendedor.setText("");
                                mamvendedor.setText("");
                                mcontravendedor.setText("");
                                mcajasexovendedor.setSelectedIndex(0);
                                mfechavendedor.setText("");
                                medadvendedor.setText("");
                                mdireccionvendedor.setText("");
                                msegurovendedor.setText("");
                                mrutafotovendedor.setText("");
                                mfotovendedor.setIcon(null);
                                mseleccionarfotovendedor.setVisible(false);
                                mactualizarvendedor.setVisible(false);
                                meliminarvendedor.setVisible(false);
                                DetallesvENTA.setVisible(false);
                                mcajavendedores.removeAllItems();
                                ArrayList vendedores = db.excecuteQuery("SELECT rfc,nombre FROM vendedor");
                                for (int i = 0; i < vendedores.size(); i++) {
                                    s = vendedores.get(i).toString();
                                    if (!s.equals("[root, ]")) {

                                        mcajavendedores.addItem(s);
                                        s = "";
                                    }
                                }
                                JOptionPane.showMessageDialog(null, "Vendedor Eliminado");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Ingresa una edad valida");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "El numero de seguro social debe contener 13 digitos");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El RFC debe contener 13 digitos");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Solo el administrador puede actualizar vendedores");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Necesitas llenar todos los campos");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_meliminarvendedorActionPerformed

    private void mactualizaproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mactualizaproductoActionPerformed
        String idProducto[] = {"idProducto", key};
        if (IO.textfield_requerido(mnombreproducto, mexistenciaproducto, mdescripcionproducto, mexistenciaminmaproducto, mprecioproducto, mrutafotoproducto)) {
            if (IO.VerificaPrecio(mprecioproducto.getText())) {
                if (IO.Verificaexistencia(mexistenciaproducto.getText()) && IO.Verificaexistencia(mexistenciaminmaproducto.getText())) {

                    String rutafotillo = IO.obtenerRutaCorregidaWindows(mrutafotoproducto.getText(), "\\", "\\\\");
                    Map<String, String> map = new HashMap();
                    map.put("nombreP", mnombreproducto.getText());
                    map.put("Descripcion", mdescripcionproducto.getText());
                    map.put("existencia", mexistenciaproducto.getText());
                    map.put("existenciaMin", mexistenciaminmaproducto.getText());
                    map.put("precio", mprecioproducto.getText());
                    map.put("ruta", rutafotillo);
                    if (db.update("producto", map, idProducto)) {
                        mnombreproducto.setText("");
                        mdescripcionproducto.setText("");
                        mexistenciaproducto.setText("");
                        mexistenciaminmaproducto.setText("");
                        mprecioproducto.setText("");
                        mrutafotoproducto.setText("");
                        mfotoproducto.setIcon(null);
                        mseleccionafotoproducto.setVisible(false);
                        mactualizaproducto.setVisible(false);
                        meliminaproducto.setVisible(false);
                        JOptionPane.showMessageDialog(null, "Producto Actualizado");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Ingresa una existencia o existencia minima valida");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingresa un precio valido");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Necesitas llenar todos los campos");
        }
    }//GEN-LAST:event_mactualizaproductoActionPerformed

    private void mbuscarproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbuscarproductoActionPerformed
        if (mcajaproductos.getItemCount() != 0) {
            mseleccionafotoproducto.setVisible(true);
            mactualizaproducto.setVisible(true);
            meliminaproducto.setVisible(true);
            key = IO.recuperarKeymodificada(IO.recuperarKey(mcajaproductos.getSelectedItem().toString()));
            mnombreproducto.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT nombreP FROM producto WHERE idProducto='" + key + "'").toString()));
            mdescripcionproducto.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT Descripcion FROM producto WHERE idProducto='" + key + "'").toString()));
            mexistenciaproducto.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT existencia FROM producto WHERE idProducto='" + key + "'").toString()));
            mexistenciaminmaproducto.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT existenciaMin FROM producto WHERE idProducto='" + key + "'").toString()));
            mprecioproducto.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT precio FROM producto WHERE idProducto='" + key + "'").toString()));
            String mrutaproducto = IO.recuperarcamposmodificados(db.excecuteQuery("SELECT ruta FROM producto WHERE idProducto='" + key + "'").toString());
            mrutafotoproducto.setText(mrutaproducto);
            Image fotoproducto = getToolkit().getImage(mrutaproducto);
            fotoproducto = fotoproducto.getScaledInstance(196, 204, Image.SCALE_DEFAULT);
            mfotoproducto.setIcon(new ImageIcon(fotoproducto));
        }
    }//GEN-LAST:event_mbuscarproductoActionPerformed

    private void mseleccionafotoproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mseleccionafotoproductoActionPerformed
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Formatos de Imagenes", "jpg", "jpeg", "png");
        JFileChooser archivo = new JFileChooser();
        archivo.addChoosableFileFilter(filtro);
        archivo.setDialogTitle("Abrir Imagen");
        File ruta = new File("C:\\Users\\pc\\Documents\\Universidad\\quinto semestre\\Fundamentos Base de datos\\proyectos\\Java\\Aplicacion Punto De Venta\\Fotos\\Productos");
        archivo.setCurrentDirectory(ruta);
        int ventana = archivo.showOpenDialog(null);
        if (ventana == JFileChooser.APPROVE_OPTION) {
            File file = archivo.getSelectedFile();
            mrutafotoproducto.setText(String.valueOf(file));
            //System.out.println(txtrutafotocliente.getText());
            Image fotoproducto = getToolkit().getImage(mrutafotoproducto.getText());
            fotoproducto = fotoproducto.getScaledInstance(196, 204, Image.SCALE_DEFAULT);
            mfotoproducto.setIcon(new ImageIcon(fotoproducto));
        }
    }//GEN-LAST:event_mseleccionafotoproductoActionPerformed

    private void meliminaproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meliminaproductoActionPerformed
        String s = "";
        if (IO.textfield_requerido(mnombreproducto, mexistenciaproducto, mdescripcionproducto, mexistenciaminmaproducto, mprecioproducto, mrutafotoproducto)) {
            if (IO.VerificaPrecio(mprecioproducto.getText())) {
                if (IO.Verificaexistencia(mexistenciaproducto.getText()) && IO.Verificaexistencia(mexistenciaminmaproducto.getText())) {

                    Map<String, String> map = new HashMap();
                    map.put("idProducto", key);

                    if (db.delete("producto", map)) {
                        mnombreproducto.setText("");
                        mdescripcionproducto.setText("");
                        mexistenciaproducto.setText("");
                        mexistenciaminmaproducto.setText("");
                        mprecioproducto.setText("");
                        mrutafotoproducto.setText("");
                        mfotoproducto.setIcon(null);
                        mcajaproductos.removeAllItems();
                        ArrayList productos = db.excecuteQuery("SELECT idProducto,nombreP FROM producto");
                        for (int i = 0; i < productos.size(); i++) {
                            s = productos.get(i).toString();
                            if (!s.equals("[root, ]")) {

                                mcajaproductos.addItem(s);
                                s = "";
                            }
                        }
                        v = false;
                        vproducto.removeAllItems();
                        ArrayList vproductos = db.excecuteQuery("SELECT idProducto,nombreP FROM producto");
                        vproducto.addItem("Seleccione un producto");
                        for (int i = 0; i < vproductos.size(); i++) {
                            s = vproductos.get(i).toString();
                            if (!s.equals("[root, ]")) {

                                vproducto.addItem(s);
                                s = "";
                            }
                        }
                        v = true;
                        mseleccionafotoproducto.setVisible(false);
                        mactualizaproducto.setVisible(false);
                        meliminaproducto.setVisible(false);
                        JOptionPane.showMessageDialog(null, "Producto Eliminado");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Ingresa una existencia o existencia minima valida");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingresa un precio valido");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Necesitas llenar todos los campos");
        }
    }//GEN-LAST:event_meliminaproductoActionPerformed

    private void vinicioventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vinicioventaActionPerformed

        double total = 0.00;
        double totalconiva = 0.00;
        ArrayList vcabeceras = db.excecuteQuery("SELECT numFolio FROM cabventa");
        Calendar c1 = Calendar.getInstance();
        if (vcabeceras.isEmpty()) {
            numFolio = 1;
        } else {

            numFolio = Long.parseLong(IO.recuperarnumFoliomodificado(vcabeceras.get(vcabeceras.size() - 1).toString()));
            numFolio += 1;

        }
        if (vcajaclientes.getItemCount() != 0) {
             int anio=c1.get(Calendar.YEAR);
             int mes=c1.get(Calendar.MONTH);
             int dia=c1.get(Calendar.DATE);
            key = IO.recuperarKeymodificada(IO.recuperarKey(vcajaclientes.getSelectedItem().toString()));
            Map<String, String> map = new HashMap();
            map.put("idCte", key);
            map.put("idVend", IO.recuperarcamposmodificados(db.excecuteQuery("SELECT rfc FROM vendedor WHERE rfc='" + rfcvendedor + "'").toString()));
            map.put("fechaVta", Integer.toString(c1.get(Calendar.YEAR)) + "-" + Integer.toString(c1.get(Calendar.MONTH)) + "-" + Integer.toString(c1.get(Calendar.DATE)));
            map.put("total", Double.toString(total));
            map.put("totalConIva", Double.toString(totalconiva));
            map.put("numFolio", Long.toString(numFolio));
            map.put("anio", Integer.toString(anio));
            map.put("mes", Integer.toString(mes));
            map.put("dia", Integer.toString(dia));
            if (db.insertar("cabventa", map)) {
                vinicioventa.setVisible(false);
                vcajaclientes.setVisible(false);
                vlblcliente.setVisible(false);
                vlblproducto.setVisible(true);
                vproducto.setVisible(true);

                vagregarcarrito.setVisible(true);

                vfotoproducto.setVisible(true);
                vlblnombreproducto.setVisible(true);
                vlblsigno.setVisible(true);
                vlblprecio.setVisible(true);
                vDescripcionproducto.setVisible(true);
                vtabla.setVisible(true);
                vfinalizarventa.setVisible(true);
                vtotal.setVisible(true);
                vtotalconiva.setVisible(true);
                vcancelarventa.setVisible(true);
                modelo = new DefaultTableModel();
                modelo.addColumn("IdProducto");
                modelo.addColumn("Nombre");
                modelo.addColumn("Descripción");
                modelo.addColumn("Precio");
                vtabla.setModel(modelo);
                v = true;
            } else {

            }

        }
    }//GEN-LAST:event_vinicioventaActionPerformed

    private void vfinalizarventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vfinalizarventaActionPerformed
        if (vtabla.getRowCount() != 0) {
            vinicioventa.setVisible(true);
            vcajaclientes.setVisible(true);
            vlblcliente.setVisible(true);
            vlblproducto.setVisible(false);
            vproducto.setVisible(false);

            vagregarcarrito.setVisible(false);

            vfotoproducto.setVisible(false);
            vlblnombreproducto.setVisible(false);
            vlblsigno.setVisible(false);
            vlblprecio.setVisible(false);
            vDescripcionproducto.setVisible(false);
            vfotoproducto.setIcon(null);
            vlblnombreproducto.setText("");
            vlblsigno.setVisible(false);
            vlblprecio.setText("");
            vDescripcionproducto.setText("");
            vtabla.setVisible(false);
            vfinalizarventa.setVisible(false);
            veliminarproducto.setVisible(false);
            vtotal.setVisible(false);
            vtotalconiva.setVisible(false);
            vtotal.setText("Total ");
            vtotalconiva.setText("Total con iva %16 ");
            vcancelarventa.setVisible(false);
            vproducto.setSelectedIndex(0);
            String cabvta = IO.recuperarcamposmodificados(db.excecuteQuery("SELECT idCabVta FROM cabventa WHERE numFolio=" + numFolio).toString());
            String precios[] = {"idCabVta", cabvta};
            Map<String, String> map2 = new HashMap();
            map2.put("total", Double.toString(vprecio));
            if (db.update("cabventa", map2, precios)) {

            }
            Map<String, String> map3 = new HashMap();
            map3.put("totalConIva", precioIva.toString());
            if (db.update("cabventa", map3, precios)) {

            }
            String id = "";
            boolean si = true;
            String precio = "";
            Map<String, String> map = new HashMap();
            int cols = vtabla.getColumnCount();
            int rows = vtabla.getRowCount();
            for (int i = 0; i < rows; i++) {
                id = vtabla.getValueAt(i, 0).toString();
                precio = vtabla.getValueAt(i, 3).toString();
                if (!id.equals("") && !precio.equals("")) {

                    map.put("idCabVta", IO.recuperarcamposmodificados(db.excecuteQuery("SELECT idCabVta FROM cabventa WHERE numFolio=" + numFolio).toString()));
                    map.put("idProducto", id);
                    map.put("precioVenta", precio);
                    if (db.insertar("detvta", map)) {
                        vprecio = 0.00;
                         precioIva =new BigDecimal("0");
                        total = 0.00;
                    } else {
                        si = false;
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Una Producto no cumplia con los requisitos, Producto cancelado idProducto=" + id);

                }
                map.clear();
            }
            if (si) {
                JOptionPane.showMessageDialog(null, "Venta exitosa");
            }
            String s="";
             vcajaclientes.removeAllItems();
        ArrayList vclientes = db.excecuteQuery("SELECT idCte,nombre FROM cliente");
        for (int i = 0; i < vclientes.size(); i++) {
            s = vclientes.get(i).toString();

            vcajaclientes.addItem(s);
            s = "";

        }
        ventasmes.removeAllItems();
        ArrayList vmes = db.excecuteQuery("SELECT mes FROM cabventa GROUP BY mes");
        for (int i = 0; i < vmes.size(); i++) {
            s = vmes.get(i).toString();

            ventasmes.addItem(s);
            s = "";

        }
        ventasanio.removeAllItems();
        ArrayList vventasnio = db.excecuteQuery("SELECT anio FROM cabventa GROUP BY anio");
        for (int i = 0; i < vventasnio.size(); i++) {
            s = vventasnio.get(i).toString();

            ventasanio.addItem(s);
            s = "";

        }
            modelo = new DefaultTableModel();
            modelo.addColumn("IdProducto");
            modelo.addColumn("Nombre");
            modelo.addColumn("Descripción");
            modelo.addColumn("Precio");
            vtabla.setModel(modelo);

        } else {
            JOptionPane.showMessageDialog(null, "Necesita agregar productos");
        }
    }//GEN-LAST:event_vfinalizarventaActionPerformed

    private void vagregarcarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vagregarcarritoActionPerformed
        String existenciaP[] = {"idProducto", key};
        Object[] object = new Object[8];
        Map<String, String> map = new HashMap();

        if (!vproducto.getSelectedItem().equals("Seleccione un producto") && !vlblnombreproducto.getText().equals("")) {
            //key = IO.recuperarKeymodificada(IO.recuperarKey(vproducto.getSelectedItem().toString()));
            int existencia = Integer.parseInt(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT existencia FROM producto WHERE idProducto=" + key).toString()));
            int existenciMiN = Integer.parseInt(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT existenciaMin FROM producto WHERE idProducto=" + key).toString()));
            if (existencia > 0) {
                object[0] = key;
                object[1] = vlblnombreproducto.getText();
                object[2] = vDescripcionproducto.getText();
                object[3] = vlblprecio.getText();
                modelo.addRow(object);
                existencia -= 1;

                map.put("existencia", Integer.toString(existencia));

                if (db.update("producto", map, existenciaP)) {
                }
                if (existencia <= existenciMiN) {
                    JOptionPane.showMessageDialog(null, "El producto se encuentra debajo de su minima existencia");
                }
                /*vfotoproducto.setIcon(null);
                vlblnombreproducto.setText("");
                vlblsigno.setVisible(false);
                vlblprecio.setText("");
                vDescripcionproducto.setText("");*/
                veliminarproducto.setVisible(true);
                total = Double.parseDouble(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT precio FROM producto WHERE idProducto=" + key).toString()));
                total2 = new BigDecimal(Double.parseDouble(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT precio FROM producto WHERE idProducto=" + key).toString())));
                vprecio += total;
                precioIva = precioIva.add(total2.multiply(iva));
                vtotal.setText("Total " + Double.toString(vprecio));
                vtotalconiva.setText("Total con iva %16 " + precioIva.toPlainString());
            } else {
                JOptionPane.showMessageDialog(null, "Producto Agotado");
                /* vfotoproducto.setIcon(null);
                vlblnombreproducto.setText("");
                vlblsigno.setVisible(false);
                vlblprecio.setText("");
                vDescripcionproducto.setText("");*/
                veliminarproducto.setVisible(true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un producto");
        }
    }//GEN-LAST:event_vagregarcarritoActionPerformed

    private void veliminarproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_veliminarproductoActionPerformed
        Map<String, String> map = new HashMap();
        if (vtabla.getSelectedRow() != -1) {
            key = vtabla.getValueAt(vtabla.getSelectedRow(), 0).toString();
            String existenciaP[] = {"idProducto", key};
            modelo.removeRow(vtabla.getSelectedRow());
            int existencia = Integer.parseInt(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT existencia FROM producto WHERE idProducto=" + key).toString()));
            int existenciMiN = Integer.parseInt(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT existenciaMin FROM producto WHERE idProducto=" + key).toString()));
            existencia += 1;

            total = Double.parseDouble(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT precio FROM producto WHERE idProducto=" + key).toString()));
            total2 = new BigDecimal(Double.parseDouble(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT precio FROM producto WHERE idProducto=" + key).toString())));
            vprecio -= total;
            precioIva = precioIva.subtract(total2.multiply(iva));
            vtotal.setText("Total " + Double.toString(vprecio));
            vtotalconiva.setText("Total con iva %16 " + precioIva.toPlainString());
            
            //vtotalconiva.setText("Total con iva %16 " + Double.toString(precioIva));

            map.put("existencia", Integer.toString(existencia));
            if (db.update("producto", map, existenciaP)) {
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una fila");
        }

        if (vtabla.getRowCount() == 0) {
            veliminarproducto.setVisible(false);
        }
    }//GEN-LAST:event_veliminarproductoActionPerformed

    private void vcancelarventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vcancelarventaActionPerformed
        String cabvta = IO.recuperarcamposmodificados(db.excecuteQuery("SELECT idCabVta FROM cabventa WHERE numFolio=" + numFolio).toString());
        Map<String, String> map = new HashMap();
        map.put("idCabVta", cabvta);
        if (db.delete("cabventa", map)) {
            vinicioventa.setVisible(true);
            vcajaclientes.setVisible(true);
            vlblcliente.setVisible(true);
            vlblproducto.setVisible(false);
            vproducto.setVisible(false);

            vagregarcarrito.setVisible(false);

            vfotoproducto.setVisible(false);
            vlblnombreproducto.setVisible(false);
            vlblsigno.setVisible(false);
            vlblprecio.setVisible(false);
            vDescripcionproducto.setVisible(false);
            vfotoproducto.setIcon(null);
            vlblnombreproducto.setText("");
            vlblsigno.setVisible(false);
            vlblprecio.setText("");
            vDescripcionproducto.setText("");
            vtabla.setVisible(false);
            vcancelarventa.setVisible(false);
            vfinalizarventa.setVisible(false);
            veliminarproducto.setVisible(false);
            vtotal.setVisible(false);
            vtotalconiva.setVisible(false);
            vtotal.setText("Total ");
            vtotalconiva.setText("Total con iva %16 ");
            vprecio = 0.00;
            precioIva=new BigDecimal("0");
            total = 0.00;
            vproducto.setSelectedIndex(0);
            JOptionPane.showMessageDialog(null, "Venta Cancelada");
        }
    }//GEN-LAST:event_vcancelarventaActionPerformed

    private void detallesdecompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detallesdecompraActionPerformed
        if (comprasclientes.getSelectedRow() != -1) {
            key = comprasclientes.getValueAt(comprasclientes.getSelectedRow(), 0).toString();

            key = IO.recuperarKeymodificada(key);
            db.excecuteQuery("SELECT idDetVta , idCabVta, idProducto, precioVenta FROM detvta WHERE idCabVta=" + key);
            db.mostrarDialogTable("Detalles de venta");

        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un registro");
        }
    }//GEN-LAST:event_detallesdecompraActionPerformed

    private void DetallesvENTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DetallesvENTAActionPerformed
        if (ventasvendedores.getSelectedRow() != -1) {
            key = ventasvendedores.getValueAt(ventasvendedores.getSelectedRow(), 0).toString();

            key = IO.recuperarKeymodificada(key);
            db.excecuteQuery("SELECT idDetVta , idCabVta, idProducto, precioVenta FROM detvta WHERE idCabVta='" + key + "'");
            db.mostrarDialogTable("Detalles de venta");

        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un registro");
        }
    }//GEN-LAST:event_DetallesvENTAActionPerformed

    private void vproductoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vproductoMouseDragged
        // System.out.println("Evento");
    }//GEN-LAST:event_vproductoMouseDragged

    private void mcajaclientesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mcajaclientesMouseReleased
        //System.out.println("Evento2");   // TODO add your handling code here:
    }//GEN-LAST:event_mcajaclientesMouseReleased

    private void mcajaclientesMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mcajaclientesMouseDragged
        //System.out.println("Evento3");
    }//GEN-LAST:event_mcajaclientesMouseDragged

    private void mcajaclientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mcajaclientesItemStateChanged

    }//GEN-LAST:event_mcajaclientesItemStateChanged

    private void mcajaclientesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mcajaclientesMouseEntered
        //System.out.println("Evento5");
    }//GEN-LAST:event_mcajaclientesMouseEntered

    private void vproductoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_vproductoItemStateChanged


    }//GEN-LAST:event_vproductoItemStateChanged

    private void vproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vproductoActionPerformed
        if (evt.getSource() == vproducto) {
            if (v) {
                if (vproducto.getItemCount() != 0) {
                    key = IO.recuperarKeymodificada(IO.recuperarKey(vproducto.getSelectedItem().toString()));
                    vlblnombreproducto.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT nombreP FROM producto WHERE idProducto='" + key + "'").toString()));
                    vDescripcionproducto.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT Descripcion FROM producto WHERE idProducto='" + key + "'").toString()));
                    vlblprecio.setText(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT precio FROM producto WHERE idProducto='" + key + "'").toString()));
                    String mrutaproducto = IO.recuperarcamposmodificados(db.excecuteQuery("SELECT ruta FROM producto WHERE idProducto='" + key + "'").toString());
                    Image fotoproducto = getToolkit().getImage(mrutaproducto);
                    fotoproducto = fotoproducto.getScaledInstance(184, 120, Image.SCALE_DEFAULT);
                    vfotoproducto.setIcon(new ImageIcon(fotoproducto));
                    String existenciaP[] = {"idProducto", key};
                    Object[] object = new Object[8];
                    Map<String, String> map = new HashMap();
                    if (!vlblnombreproducto.getText().equals("")) {
                        int existencia = Integer.parseInt(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT existencia FROM producto WHERE idProducto=" + key).toString()));
                        int existenciMiN = Integer.parseInt(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT existenciaMin FROM producto WHERE idProducto=" + key).toString()));
                        if (existencia > 0) {
                            object[0] = key;
                            object[1] = vlblnombreproducto.getText();
                            object[2] = vDescripcionproducto.getText();
                            object[3] = vlblprecio.getText();
                            modelo.addRow(object);
                            existencia -= 1;

                            map.put("existencia", Integer.toString(existencia));

                            if (db.update("producto", map, existenciaP)) {
                            }
                            if (existencia <= existenciMiN) {
                                JOptionPane.showMessageDialog(null, "El producto se encuentra debajo de su minima existencia");
                            }
                            /*vfotoproducto.setIcon(null);
                vlblnombreproducto.setText("");
                vlblsigno.setVisible(false);
                vlblprecio.setText("");
                vDescripcionproducto.setText("");*/
                            veliminarproducto.setVisible(true);
                            total = Double.parseDouble(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT precio FROM producto WHERE idProducto=" + key).toString()));
                            total2 = new BigDecimal(Double.parseDouble(IO.recuperarcamposmodificados(db.excecuteQuery("SELECT precio FROM producto WHERE idProducto=" + key).toString())));
                            vprecio += total;
                            precioIva = precioIva.add(total2.multiply(iva));
                            vtotal.setText("Total " + Double.toString(vprecio));
                            vtotalconiva.setText("Total con iva %16 " + precioIva.toPlainString());
                        } else {
                            JOptionPane.showMessageDialog(null, "Producto Agotado");
                            /* vfotoproducto.setIcon(null);
                vlblnombreproducto.setText("");
                vlblsigno.setVisible(false);
                vlblprecio.setText("");
                vDescripcionproducto.setText("");*/
                            veliminarproducto.setVisible(true);
                        }
                    } else {
                        //JOptionPane.showMessageDialog(null, "Busque el producto");
                    }
                }
                //System.out.println("Lol"); 
            }
        }

    }//GEN-LAST:event_vproductoActionPerformed

    private void mcajaproductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcajaproductosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mcajaproductosActionPerformed

    private void vcajaclientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vcajaclientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vcajaclientesActionPerformed

    private void cbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbuscarActionPerformed

            modelo4 = new DefaultTableModel();
            modelo4.addColumn("idCabVta");
            modelo4.addColumn("Numero de folio");
            modelo4.addColumn("idVend");
            modelo4.addColumn("Fecha de venta");
            modelo4.addColumn("Total");
            modelo4.addColumn("Total con iva");
            modelo4.addColumn("Nombre del cliente");
            tablacancelar.setModel(modelo4);
            ArrayList c = db.excecuteQuery("SELECT idCabVta,numFolio,idVend,fechaVta,total,totalConIva,nombre FROM cabventa JOIN cliente USING(idCte)"); 
            Object[] object = new Object[8];
            for (int i = 0; i < c.size(); i++) {
                StringTokenizer tokens = new StringTokenizer(c.get(i).toString(),",");
                int j = 0;
                while (tokens.hasMoreTokens()) {
                    object[j] = tokens.nextToken();
                    j++;
                }
                modelo4.addRow(object);
            }
            
       
       
       
    }//GEN-LAST:event_cbuscarActionPerformed

    private void cdetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdetallesActionPerformed
         if (tablacancelar.getSelectedRow() != -1) {
            key = tablacancelar.getValueAt(tablacancelar.getSelectedRow(), 0).toString();
           
            key = IO.recuperarKeymodificada2(key);
             
            db.excecuteQuery("SELECT idDetVta,idCabVta,idProducto,nombreP,precioVenta FROM detvta JOIN producto USING(idProducto) WHERE idCabVta='"+key+"'");
         db.mostrarDialogTable("Productos adquiridos");

        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un registro");
        } 
       
    }//GEN-LAST:event_cdetallesActionPerformed

    private void celiminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_celiminarActionPerformed
       if (tablacancelar.getSelectedRow() != -1) {
           String s="";
            key = IO.recuperarKeymodificada(tablacancelar.getValueAt(tablacancelar.getSelectedRow(), 0).toString());
            Map<String, String> map = new HashMap();
            map.put("idCabVta", key);
            if (db.delete("detvta", map)) {
                 Map<String, String> map2 = new HashMap();
            map2.put("idCabVta", key);
                 if (db.delete("cabventa", map2)) {
                     
             vcajaclientes.removeAllItems();
        ArrayList vclientes = db.excecuteQuery("SELECT idCte,nombre FROM cliente");
        for (int i = 0; i < vclientes.size(); i++) {
            s = vclientes.get(i).toString();

            vcajaclientes.addItem(s);
            s = "";

        }
        ventasmes.removeAllItems();
        ArrayList vmes = db.excecuteQuery("SELECT mes FROM cabventa GROUP BY mes");
        for (int i = 0; i < vmes.size(); i++) {
            s = vmes.get(i).toString();

            ventasmes.addItem(s);
            s = "";

        }
                     modelo4 = new DefaultTableModel();
            modelo4.addColumn("IdCabVenta");
            modelo4.addColumn("Numero de folio");
            modelo4.addColumn("idVend");
            modelo4.addColumn("Fecha de venta");
            modelo4.addColumn("Total");
            modelo4.addColumn("Total con iva");
            modelo4.addColumn("Nombre del cliente");
            tablacancelar.setModel(modelo4);
            JOptionPane.showMessageDialog(null, "Compra eliminada");
                 }else{
                     JOptionPane.showMessageDialog(null, "Ocurrio un error");
                 }
               
           
                }
              
                
            
            
       }
    }//GEN-LAST:event_celiminarActionPerformed

    private void buscarmesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarmesActionPerformed
         key = IO.recuperarKeymodificada(IO.recuperarKey(ventasmes.getSelectedItem().toString()));
         Calendar c1 = Calendar.getInstance();
         String fechaanio = Integer.toString(c1.get(Calendar.YEAR));
        modelo5 = new DefaultTableModel();
            modelo5.addColumn("idCabVta");
            modelo5.addColumn("Numero de folio");
            modelo5.addColumn("idVend");
            modelo5.addColumn("Fecha de venta");
            modelo5.addColumn("Total");
            modelo5.addColumn("Total con iva");
            modelo5.addColumn("Nombre del cliente");
            //modelo5.addColumn("");
            ventas.setModel(modelo5);
            ArrayList c = db.excecuteQuery("SELECT idCabVta,numFolio,idVend,fechaVta,total,totalConIva,nombre FROM cabventa JOIN cliente USING(idCte) WHERE mes="+key+" AND anio="+fechaanio); 
            Object[] object = new Object[8];
            for (int i = 0; i < c.size(); i++) {
                StringTokenizer tokens = new StringTokenizer(c.get(i).toString(),",");
                int j = 0;
                while (tokens.hasMoreTokens()) {
                    object[j] = tokens.nextToken();
                    j++;
                }
                modelo5.addRow(object);
            }   
            db.mostrarDialogTable("Vista de impresión");
                   

    }//GEN-LAST:event_buscarmesActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Calendar c1 = Calendar.getInstance();
         String fechadia = "" + Integer.toString(c1.get(Calendar.YEAR)) + "-" + Integer.toString(c1.get(Calendar.MONTH)) + "-" + Integer.toString(c1.get(Calendar.DATE));;
      
        modelo5 = new DefaultTableModel();
            modelo5.addColumn("idCabVta");
            modelo5.addColumn("Numero de folio");
            modelo5.addColumn("idVend");
            modelo5.addColumn("Fecha de venta");
            modelo5.addColumn("Total");
            modelo5.addColumn("Total con iva");
            modelo5.addColumn("Nombre del cliente");
            //modelo5.addColumn("");
            ventas.setModel(modelo5);
            ArrayList c = db.excecuteQuery("SELECT idCabVta,numFolio,idVend,fechaVta,total,totalConIva,nombre FROM cabventa JOIN cliente USING(idCte) WHERE fechaVta='"+fechadia+"'"); 
            Object[] object = new Object[8];
            for (int i = 0; i < c.size(); i++) {
                StringTokenizer tokens = new StringTokenizer(c.get(i).toString(),",");
                int j = 0;
                while (tokens.hasMoreTokens()) {
                    object[j] = tokens.nextToken();
                    j++;
                }
                modelo5.addRow(object);
            }   
            db.mostrarDialogTable("Vista de impresión");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void vdetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vdetallesActionPerformed
      
        if (ventas.getSelectedRow() != -1) {
            key = ventas.getValueAt(ventas.getSelectedRow(), 0).toString();
            key = IO.recuperarKeymodificada2(key);
             db.excecuteQuery("SELECT numFolio,idVend,idCte,fechaVta,idProducto,precioVenta FROM cabventa JOIN detvta USING(idCabVta) WHERE idCabVta="+key);
            db.mostrarDialogTable("Detalles de venta");

        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un registro");
        }
     
    }//GEN-LAST:event_vdetallesActionPerformed

    private void bventasanioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bventasanioActionPerformed
          key = IO.recuperarKeymodificada(IO.recuperarKey(ventasanio.getSelectedItem().toString()));
        modelo5 = new DefaultTableModel();
            modelo5.addColumn("idCabVta");
            modelo5.addColumn("Numero de folio");
            modelo5.addColumn("idVend");
            modelo5.addColumn("Fecha de venta");
            modelo5.addColumn("Total");
            modelo5.addColumn("Total con iva");
            modelo5.addColumn("Nombre del cliente");
            //modelo5.addColumn("");
            ventas.setModel(modelo5);
            ArrayList c = db.excecuteQuery("SELECT idCabVta,numFolio,idVend,fechaVta,total,totalConIva,nombre FROM cabventa JOIN cliente USING(idCte) WHERE anio="+key); 
            Object[] object = new Object[8];
            for (int i = 0; i < c.size(); i++) {
                StringTokenizer tokens = new StringTokenizer(c.get(i).toString(),",");
                int j = 0;
                while (tokens.hasMoreTokens()) {
                    object[j] = tokens.nextToken();
                    j++;
                }
                modelo5.addRow(object);
            }   
            db.mostrarDialogTable("Vista de impresión");
    }//GEN-LAST:event_bventasanioActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         if(IO.textfield_requerido(primera,Segunda)){
       String dia1="",mes1="",anio1="";
       String dia2="",mes2="",anio2="";
	StringTokenizer tokens=new StringTokenizer(primera.getText(), "-");
        int i=0;
        while(tokens.hasMoreTokens()){
          if(i==0){
             anio1=tokens.nextToken();
          }
          if(i==1){
              mes1=tokens.nextToken();
          }
          if(i==2){
              dia1=tokens.nextToken();
          }
          i++;
        }
        
        StringTokenizer tokens2=new StringTokenizer(Segunda.getText(), "-");
        i=0;
        while(tokens2.hasMoreTokens()){
          if(i==0){
             anio2=tokens2.nextToken();
          }
          if(i==1){
              mes2=tokens2.nextToken();
          }
          if(i==2){
              dia2=tokens2.nextToken();
          }
          i++;
        }
             int pdia=Integer.parseInt(dia1);
             int pmes=Integer.parseInt(mes1);
             int panio=Integer.parseInt(anio1);
             int sdia=Integer.parseInt(dia2);
             int smes=Integer.parseInt(mes2);
             int sanio=Integer.parseInt(anio2);
             boolean fecha=true;
      if(panio>=sanio){
          if(pmes>=smes){
              if(pdia>sdia){
                  fecha=false;
          }
      }
      }
      if(fecha){
        modelo5 = new DefaultTableModel();
            modelo5.addColumn("idCabVta");
            modelo5.addColumn("Numero de folio");
            modelo5.addColumn("idVend");
            modelo5.addColumn("Fecha de venta");
            modelo5.addColumn("Total");
            modelo5.addColumn("Total con iva");
            modelo5.addColumn("Nombre del cliente");
            //modelo5.addColumn("");
            ventas.setModel(modelo5);
           /* ArrayList c = db.excecuteQuery("SELECT idCabVta,numFolio,idVend,fechaVta,total,totalConIva,nombre FROM cabventa JOIN cliente USING(idCte) "
                   + "WHERE ( anio>="+panio
               +" AND mes>="+pmes+" AND dia>="+pdia
           +" ) AND ( anio<="+sanio+" AND mes<="+smes+" AND dia<="+sdia+")"); */
           ArrayList c = db.excecuteQuery("SELECT idCabVta,numFolio,idVend,fechaVta,total,totalConIva,nombre FROM cabventa JOIN cliente USING(idCte) "+
                   " WHERE fechaVta BETWEEN '"+ primera.getText()+"' AND '"+Segunda.getText()+"'");
                   
            Object[] object = new Object[8];
            for (i = 0; i < c.size(); i++) {
                StringTokenizer tokens3 = new StringTokenizer(c.get(i).toString(),",");
                int j = 0;
                while (tokens3.hasMoreTokens()) {
                    object[j] = tokens3.nextToken();
                    j++;
                }
                modelo5.addRow(object);
            }   
            db.mostrarDialogTable("Vista de impresión");
          
      }else{
         JOptionPane.showMessageDialog(null, "Ingrese un rango valido"); 
      }
             
             
    }else{
             JOptionPane.showMessageDialog(null, "Rellene los campos");
         }
   
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new Ventas(rfcvendedor, contravendedor).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DetallesvENTA;
    private javax.swing.JButton RegistrarCliente;
    private javax.swing.JTextField Segunda;
    private javax.swing.JButton btnBuscarfoto;
    private javax.swing.JButton btnfotovendedor;
    private javax.swing.JButton btnregistrarproducto;
    private javax.swing.JButton buscarmes;
    private javax.swing.JButton bventasanio;
    private javax.swing.JButton cbuscar;
    private javax.swing.JButton cdetalles;
    private javax.swing.JButton celiminar;
    private javax.swing.JButton cerrarsesion;
    private javax.swing.JComboBox<String> combosexocliente;
    private javax.swing.JComboBox<String> combovendedor;
    private javax.swing.JTable comprasclientes;
    private javax.swing.JButton detallesdecompra;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JLabel label;
    private javax.swing.JLabel lblcorreo234;
    private javax.swing.JLabel lblfotoVendedor;
    private javax.swing.JLabel lblfotocliente;
    private javax.swing.JLabel lblfotoproducto;
    private javax.swing.JLabel lblfotovendedor;
    private javax.swing.JLabel lblnombreproducto;
    private javax.swing.JButton mactualizaproducto;
    private javax.swing.JButton mactualizarcliente;
    private javax.swing.JButton mactualizarvendedor;
    private javax.swing.JTextField mamcliente;
    private javax.swing.JTextField mamvendedor;
    private javax.swing.JTextField mapcliente;
    private javax.swing.JTextField mapvendedor;
    private javax.swing.JButton mbtnseleccionafotocliente;
    private javax.swing.JButton mbuscarcliente;
    private javax.swing.JButton mbuscarproducto;
    private javax.swing.JButton mbuscarvendedor;
    private javax.swing.JComboBox<String> mcajaclientes;
    private javax.swing.JComboBox<String> mcajaproductos;
    private javax.swing.JComboBox<String> mcajasexocliente;
    private javax.swing.JComboBox<String> mcajasexovendedor;
    private javax.swing.JComboBox<String> mcajavendedores;
    private javax.swing.JPasswordField mcontravendedor;
    private javax.swing.JTextField mcorreocliente;
    private javax.swing.JTextField mdescripcionproducto;
    private javax.swing.JTextField mdireccioncliente;
    private javax.swing.JTextField mdireccionvendedor;
    private javax.swing.JTextField medadcliente;
    private javax.swing.JTextField medadvendedor;
    private javax.swing.JButton meliminaproducto;
    private javax.swing.JButton meliminarcliente;
    private javax.swing.JButton meliminarvendedor;
    private javax.swing.JTextField mexistenciaminmaproducto;
    private javax.swing.JTextField mexistenciaproducto;
    private javax.swing.JTextField mfechancimientocliente;
    private javax.swing.JTextField mfechavendedor;
    private javax.swing.JLabel mfotocliente;
    private javax.swing.JLabel mfotoproducto;
    private javax.swing.JLabel mfotovendedor;
    private javax.swing.JTextField mnombrecliente;
    private javax.swing.JTextField mnombreproducto;
    private javax.swing.JTextField mnombrevendedor;
    private javax.swing.JTextField mprecioproducto;
    private javax.swing.JTextField mrfcvendedor;
    private javax.swing.JTextField mrutafotoproducto;
    private javax.swing.JTextField mrutafotovendedor;
    private javax.swing.JTextField mrutaftocliente;
    private javax.swing.JTextField msegurovendedor;
    private javax.swing.JButton mseleccionafotoproducto;
    private javax.swing.JButton mseleccionarfotovendedor;
    private javax.swing.JTextField primera;
    private javax.swing.JButton registrarVendedor;
    private javax.swing.JButton selecfotocliente;
    private javax.swing.JTable tablacancelar;
    private javax.swing.JTextField txtNombreproducto;
    private javax.swing.JTextField txtamVendedor;
    private javax.swing.JTextField txtapVendedor;
    private javax.swing.JTextField txtapmatcliente;
    private javax.swing.JTextField txtappatcliente;
    private javax.swing.JPasswordField txtcontraVendedor;
    private javax.swing.JTextField txtcorreocliente;
    private javax.swing.JTextField txtdescripcionproducto;
    private javax.swing.JTextField txtdireccionVendedor;
    private javax.swing.JTextField txtdireccioncliente;
    private javax.swing.JTextField txtedadVendedor;
    private javax.swing.JTextField txtedadcliente;
    private javax.swing.JTextField txtexistenciaminimaproducto;
    private javax.swing.JTextField txtexistenciaproducto;
    private javax.swing.JTextField txtfechacliente;
    private javax.swing.JTextField txtfechanacimientoVendedor;
    private javax.swing.JTextField txtnombreVendedor;
    private javax.swing.JTextField txtnombrecliente;
    private javax.swing.JTextField txtnumerosocialVendedor;
    private javax.swing.JTextField txtprecioproducto;
    private javax.swing.JTextField txtrfcVendedor;
    private javax.swing.JTextField txtrutafotocliente;
    private javax.swing.JTextField txtrutafotoproducto;
    private javax.swing.JTextField txtrutavendedor;
    private javax.swing.JTextArea vDescripcionproducto;
    private javax.swing.JButton vagregarcarrito;
    private javax.swing.JComboBox<String> vcajaclientes;
    private javax.swing.JButton vcancelarventa;
    private javax.swing.JButton vdetalles;
    private javax.swing.JButton veliminarproducto;
    private javax.swing.JTable ventas;
    private javax.swing.JComboBox<String> ventasanio;
    private javax.swing.JComboBox<String> ventasmes;
    private javax.swing.JTable ventasvendedores;
    private javax.swing.JButton vfinalizarventa;
    private javax.swing.JLabel vfotoproducto;
    private javax.swing.JButton vinicioventa;
    private javax.swing.JLabel vlblcliente;
    private javax.swing.JLabel vlblnombreproducto;
    private javax.swing.JLabel vlblprecio;
    private javax.swing.JLabel vlblproducto;
    private javax.swing.JLabel vlblsigno;
    private javax.swing.JComboBox<String> vproducto;
    private javax.swing.JPasswordField vrepetircontra;
    private javax.swing.JTable vtabla;
    private javax.swing.JLabel vtotal;
    private javax.swing.JLabel vtotalconiva;
    // End of variables declaration//GEN-END:variables
}
